name: Upload Website

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl private --follow-symlinks --delete
        env:
          VITE_AWS_HTTPAPI_URL: ${{ secrets.VITE_AWS_HTTPAPI_URL }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
          SOURCE_DIR: 'dist'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Deployment notification
        run: |
          echo "âœ… Build and deployment completed successfully"
          echo "ðŸ”§ MANUAL STEP REQUIRED for SPA routing:"
          echo "To fix page refresh issues, you need to configure CloudFront:"
          echo ""
          echo "Option 1 (Recommended): CloudFront Functions"
          echo "1. Go to CloudFront Console â†’ Your Distribution â†’ Functions"
          echo "2. Create a new function with the code from cloudfront-spa-function.js"
          echo "3. Associate it with the 'viewer-request' event"
          echo ""
          echo "Option 2: CloudFront Custom Error Pages"
          echo "1. Go to CloudFront Console â†’ Your Distribution â†’ Error Pages"
          echo "2. Add custom error response for 403: /index.html with 200 response code"
          echo "3. Add custom error response for 404: /index.html with 200 response code"
          echo ""
          echo "See SPA-ROUTING-SETUP.md for detailed instructions"

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}